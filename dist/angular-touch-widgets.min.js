"use strict";function parseTime(t){var e=t.split(":");return{hours:parseInt(e[0]),minutes:parseInt(e[1])}}function regularArcData(t,e,i,r,o,a){var n=0,l=a?0:1,s=n+r*Math.PI/180,c=n+o*Math.PI/180,d=(c-s)%(2*Math.PI)>Math.PI?1:0,h=t+i*Math.cos(s),u=e+i*Math.sin(s),f=t+i*Math.cos(c),g=e+i*Math.sin(c),p=" ",x="";return x+="M"+p+h+p+u+p,x+="A"+p+i+p+i+p+n+p+d+p+l+p+f+p+g}function regularSemiCircle(t,e,i,r,o,a){var n=" ",l=regularArcData(t,e,i,r,o-1e-4,a);return l+="L"+n+t+n+e}function positionOnCircle(t,e,i,r,o,a){var n=0,l=n+r*Math.PI/180,s=parseInt(t+(i+o)*Math.cos(l)),c=parseInt(e+(i+a)*Math.sin(l));return{x:s,y:c}}function parseTime(t){var e=t.split(":");return{hours:parseInt(e[0]),minutes:parseInt(e[1])}}function getAngle(t,e,i,r){var o=(r-e)/(i-t),a=Math.atan(o);return 0>i-t&&(a+=Math.PI),180*a/Math.PI+90}function getModule(t,e,i,r){var o=i-t,a=r-e;return Math.sqrt(o*o+a*a)}!function(t){t.module("angularTouchWidgets.config",["ionic"]).value("angularTouchWidgets.config",{debug:!0}),t.module("angularTouchWidgets.directives",[]),t.module("angularTouchWidgets",["angularTouchWidgets.config","angularTouchWidgets.directives"])}(angular),angular.module("angularTouchWidgets.directives.clockEditor",[]).directive("clockEditor",function(){return{restrict:"E",scope:{from:"=",to:"="},template:'<div style="margin: auto; height: 250px; width: 350px;" on-drag-start="onTouch($event)" on-drag-end="onRelease()" on-drag="drag($event)">                    <svg id="clock-editor" height="250" width="350">                        <defs>                            <filter id="shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                <feOffset result="offOut" in="SourceGraphic" dx="0" dy="2"></feOffset>                                <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                            </filter>                        </defs>                        <g>                            <circle cx="175" cy="125" r="100" fill="white"></circle>                            <path fill="#eee" d="M 175 25 A 100 100 0 0 1 225 38L 175 125"></path>                            <path fill="#eee" d="M 261 75 A 100 100 0 0 1 275 125L 175 125"></path>                            <path fill="#eee" d="M 261 175 A 100 100 0 0 1 225 211L 175 125"></path>                            <path fill="#eee" d="M 175 225 A 100 100 0 0 1 125 211L 175 125"></path>                            <path fill="#eee" d="M 88 175 A 100 100 0 0 1 75 125L 175 125"></path>                            <path fill="#eee" d="M 88 74 A 100 100 0 0 1 124 38L 175 125"></path>                        </g>                        <g>                            <circle cx="175" cy="125" r="70" fill="white"></circle>                            <path fill="#eee" d="M 210 64 A 70 70 0 0 1 235 90L 175 125"></path>                            <path fill="#eee" d="M 245 125 A 70 70 0 0 1 235 160L 175 125"></path>                            <path fill="#eee" d="M 210 185 A 70 70 0 0 1 175 195L 175 125"></path>                            <path fill="#eee" d="M 140 185 A 70 70 0 0 1 114 160L 175 125"></path>                            <path fill="#eee" d="M 105 125 A 70 70 0 0 1 114 90L 175 125"></path>                            <path fill="#eee" d="M 139 64 A 70 70 0 0 1 175 55L 175 125"></path>                        </g>                        <path class="content-selection" ng-attr-d="{{ semiCircle }}" filter="url(#shadow-{{$id}})"></path>                        <circle id="test" cx="175" cy="125" r="100" stroke="black" fill="transparent" stroke-width="6" filter="url(#shadow-{{$id}})"></circle>                        <g fill="#555">                            <text x="167" y="47">                                00                            </text>                            <text x="210" y="57">                                13                            </text>                            <text x="242" y="88">                                14                            </text>                            <text x="252" y="129">                                15                            </text>                            <text x="241" y="171">                                16                            </text>                            <text x="210" y="203">                                17                            </text>                            <text x="168" y="215">                                18                            </text>                            <text x="128" y="203">                                19                            </text>                            <text x="96" y="171">                                20                            </text>                            <text x="85" y="129">                                21                            </text>                            <text x="95" y="88">                                22                            </text>                            <text x="125" y="57">                                23                            </text>                        </g>                        <g fill="#555">                            <text x="168" y="72">                                12                            </text>                            <text x="199" y="80">                                1                            </text>                            <text x="221" y="100">                                2                            </text>                            <text x="228" y="129">                                3                            </text>                            <text x="221" y="159">                                4                            </text>                            <text x="200" y="181">                                5                            </text>                            <text x="171" y="189">                                6                            </text>                            <text x="142" y="181">                                7                            </text>                            <text x="121" y="158">                                8                            </text>                            <text x="112" y="129">                                9                            </text>                            <text x="119" y="101">                                10                            </text>                            <text x="137" y="81">                                11                            </text>                        </g>                        <text ng-attr-x="{{fromPos.x-20}}" ng-attr-y="{{fromPos.y+9}}" font-size="20">                            {{ from }}                        </text>                        <text ng-attr-x="{{toPos.x-20}}" ng-attr-y="{{toPos.y+9}}" font-size="20">                            {{ to }}                        </text>                    </svg>                </div>',controller:function(t,e){var i,r,o,a,n=!1,l=function(){var e=parseTime(t.from),i=parseTime(t.to),r=-90+(30*e.hours+.5*e.minutes),o=-90+(30*i.hours+.5*i.minutes);t.semiCircle=regularSemiCircle(175,125,100,r,o,!1),t.fromPos=positionOnCircle(175,125,100,r,40,14),t.toPos=positionOnCircle(175,125,100,o,40,14)},s=function(t,e){var i=parseTime(t),r=parseTime(e);return i.hours>r.hours||i.hours==r.hours&&i.minutes>=r.minutes},c=function(t,e){var i=parseTime(t),r=parseTime(e);return i.hours>r.hours||i.hours==r.hours&&i.minutes>r.minutes};t.onTouch=function(l){n=!0,e.freezeAllScrolls(!0);var s={x:l.gesture.touches[0].clientX,y:l.gesture.touches[0].clientY},c=l.currentTarget.getBoundingClientRect();r={x:c.left+175,y:c.top+125},i=getModule(r.x,r.y,s.x,s.y)<70?0:12,o=getAngle(r.x,r.y,s.x,s.y),t.from=""+(parseInt(o/30)+i)+":"+(15>o%30?"00":"30"),t.to=t.from,a=!1},t.onRelease=function(){n=!1,e.freezeAllScrolls(!1)},t.drag=function(e){if(n){var l={x:e.gesture.touches[0].clientX,y:e.gesture.touches[0].clientY},d=getAngle(r.x,r.y,l.x,l.y);(o>270&&90>d||d>270&&90>o)&&(i=0===i?12:0),o=d;var h,u=""+(parseInt(o/30)+i)+":"+(15>o%30?"00":"30");h=a?!c(u,t.to):!s(u,t.from),h?t.from=u:t.to=u,a=h}},t.$watch("from",function(){l()}),t.$watch("to",function(){l()}),l()}}}),angular.module("angularTouchWidgets.directives.clockViewer",[]).directive("clockViewer",function(){return{restrict:"E",scope:{from:"=",to:"=",onTab:"&"},replace:!0,template:'<div>                    <svg class="clock-viewer" height="200" width="240" on-tap="onClick()">                        <defs>                            <filter id="shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                <feOffset result="offOut" in="SourceGraphic" dx="0" dy="2"></feOffset>                                <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                            </filter>                        </defs>                        <g filter="url(#shadow-{{$id}})">                            <circle id="test" cx="115" cy="100" r="70" fill="white"></circle>                            <path class="content-selection" ng-attr-d="{{ semiCircle }}"></path>                            <circle id="test" cx="115" cy="100" r="65" stroke="white" fill="transparent" stroke-width="8"></circle>                            <circle id="test" cx="115" cy="100" r="70" stroke="black" fill="transparent" stroke-width="6"></circle>                        </g>                        <text ng-attr-x="{{fromPos.x-20}}" ng-attr-y="{{fromPos.y+7}}" font-size="14">                                {{ from }}                        </text>                        <text ng-attr-x="{{toPos.x-20}}" ng-attr-y="{{toPos.y+7}}" font-size="14">                            {{ to }}                        </text>                    </svg>                </div>',controller:function(t){var e=function(){var e=parseTime(t.from),i=parseTime(t.to),r=-90+(30*e.hours+.5*e.minutes),o=-90+(30*i.hours+.5*i.minutes);t.semiCircle=regularSemiCircle(115,100,70,r,o,!1),t.fromPos=positionOnCircle(115,100,70,r,24,14),t.toPos=positionOnCircle(115,100,70,o,24,14)};e(),t.$watch("from",function(){e()}),t.$watch("to",function(){e()})}}}),angular.module("angularTouchWidgets.directives.colorWheel",[]).directive("colorWheel",function(t){return{restrict:"E",replace:!0,scope:{color:"=",img:"@"},template:'<div style="height: 300px; width: 300px; margin: auto; position: relative;">                    <canvas var="1" width="300" height="300" ng-click="colorClick($event)"></canvas>                    <div ng-style="{\'background-color\': \'rgb(\'+color.r+\',\'+color.g+\',\'+color.b+\')\'}" style="position: absolute; top: 120px; left: 120px; height: 60px; width: 60px; border-radius: 50%; box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.46); transition: background 0.1s; -webkit-transition: background 0.1s"></div>                </div>',link:function(e,i){var r=i.children()[0].getContext("2d"),o=angular.element(i.children()[1]),a=new Image;a.onload=function(){r.drawImage(a,0,0,300,300)},a.src=e.img||"img/color-wheel.png";var n=function(){t.addClass(o,"pulse animated-quick").then(function(){o.removeClass("pulse animated-quick")})};e.colorClick=function(t){var i=r.getImageData(t.offsetX,t.offsetY,1,1).data;0!==i[3]&&(angular.copy({r:i[0],g:i[1],b:i[2]},e.color),n())}}}}),angular.module("angularTouchWidgets.directives",["angularTouchWidgets.directives.modeSelector","angularTouchWidgets.directives.colorWheel","angularTouchWidgets.directives.lightViewer","angularTouchWidgets.directives.lightColorEditor","angularTouchWidgets.directives.lightIntensityEditor","angularTouchWidgets.directives.clockViewer","angularTouchWidgets.directives.timerViewer","angularTouchWidgets.directives.clockEditor","angularTouchWidgets.directives.timerEditor","angularTouchWidgets.directives.thermometerEditor","angularTouchWidgets.directives.phViewer","angularTouchWidgets.directives.orpViewer","angularTouchWidgets.directives.onOffButton"]),angular.module("angularTouchWidgets.directives.lightColorEditor",[]).directive("lightColorEditor",function(t){return{restrict:"E",replace:!0,scope:{color:"=",img:"@"},template:'<div style="height: 300px; width: 300px; margin: auto; position: relative;">                    <canvas var="1" width="300" height="300" on-tap="colorClick($event)"></canvas>                    <div ng-style="{\'background-color\': \'rgb(\'+color.r+\',\'+color.g+\',\'+color.b+\')\'}" style="position: absolute; top: 120px; left: 120px; height: 60px; width: 60px; border-radius: 50%; box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.46); transition: background 0.1s; -webkit-transition: background 0.1s"></div>                </div>',link:function(e,i){var r=i.children()[0].getContext("2d"),o=angular.element(i.children()[1]),a=new Image;a.onload=function(){r.drawImage(a,0,0,300,300)},a.src=e.img||"img/light-color-editor.png";var n=function(){t.addClass(o,"pulse animated-quick").then(function(){o.removeClass("pulse animated-quick")})};e.colorClick=function(t){var i={x:t.gesture.touches[0].clientX,y:t.gesture.touches[0].clientY},o=t.currentTarget.getBoundingClientRect(),a=r.getImageData(i.x-o.left,i.y-o.top,1,1).data;0!==a[3]&&(angular.copy({r:a[0],g:a[1],b:a[2]},e.color),n())}}}}),angular.module("angularTouchWidgets.directives.lightIntensityEditor",[]).directive("lightIntensityEditor",function(){return{restrict:"E",replace:!0,scope:{intensity:"="},template:'<div class="range range-positive" style="width: 100%">                    <i class="icon ion-ios-sunny-outline"></i>                    <input type="range" name="volume" min="0" max="100" ng-model="intensity">                    <i class="icon ion-ios-sunny"></i>                </div>'}}),angular.module("angularTouchWidgets.directives.lightViewer",[]).directive("lightViewer",function(){return{restrict:"E",replace:!0,scope:{on:"=",mode:"=",canTurnOff:"=",isRgb:"=",onTab:"&",modeStatic:"=",modeAnimated:"="},template:'  <div class="light-viewer" style="position: relative; height: 260px; width: 240px;">                            <svg class="fx-zoom-normal" height="260" width="240" style="position: absolute;" ng-show="(on || !canTurnOff)">                                <defs>                                    <filter id="shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                        <feOffset result="offOut" in="SourceGraphic" dx="0" dy="2"></feOffset>                                        <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                        <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                        <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                                    </filter>                                </defs>                                <path fill="transparent" stroke-linecap="round" stroke="white" stroke-width="20" d="M 47 195 A 105 105 0 1 1 182 195" filter="url(#shadow-{{$id}})" stroke on-tap="onClick()"></path>                                <path fill="transparent" stroke-linecap="round" stroke="#ccc" stroke-width="2" d="M 47 195 A 105 105 0 1 1 182 195" on-tap="onClick()"></path>                                <path class="line-selection" fill="transparent" stroke-linecap="round" stroke-width="6" ng-attr-d="{{ arc }}" on-tap="onClick()"></path>                            </svg>                            <svg class="show-hide-opacity ng-hide" ng-show="canTurnOff" height="260" width="240" style="position: absolute;">                                <defs>                                    <filter id="button-shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                        <feOffset result="offOut" in="SourceGraphic" dx="1" dy="4"></feOffset>                                        <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                        <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                        <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                                    </filter>                                </defs>                                                                <g on-tap="toggle()">                                    <path class="show-hide-opacity button-on-svg" ng-hide="on" fill="transparent" stroke-width="40" d="M 166 204 A 103 103 0 0 1 63 204" filter="url(#button-shadow-{{$id}})"></path>                                    <path class="show-hide-opacity button-off-svg" ng-show="on" fill="transparent" stroke-width="40" d="M 166 204 A 103 103 0 0 1 63 204" filter="url(#button-shadow-{{$id}})"></path>                                </g>                            </svg>                            <div style="height: 0; position: absolute; top: 41px; left: 39px;">                                <div class="fx-rotate-clock round-button center override button-shadow ng-hide" ng-show="isRgb && (on || !canTurnOff) && mode===\'static\'" ng-style="{\'background-color\': \'rgb(\'+modeStatic.color.r+\',\'+modeStatic.color.g+\',\'+modeStatic.color.b+\')\'}" on-tap="onClick()">                                </div>                                <div class="fx-rotate-clock round-button center override button-shadow ng-hide" ng-show="isRgb && (on || !canTurnOff) && mode===\'animation\'" style="overflow: hidden;">                                    <div class="animated-color" style="height: 100%; width: 100%;" ng-style="{\'-webkit-animation-duration\': modeAnimated.speed+\'s\', \'animation-duration\': modeAnimated.speed+\'s\', \'-webkit-animation-name\': modeAnimated.animation, \'animation-name\': modeAnimated.animation}" on-tap="onClick()"></div>                                </div>                                <div class="fx-rotate-clock round-button center override button-on button-shadow ng-hide" ng-show="!isRgb && (on || !canTurnOff)" style="height: 150px; width: 150px;" on-tap="onClick()">                                    <span style="font-size: 42px;">{{ modeStatic.intensity }}%</span>                                </div>                                <div class="fx-rotate-clock round-button center override button-off button-shadow ng-hide" ng-show="!(on || !canTurnOff)" on-tap="toggle()">                                    <span style="font-size: 34px; color: white;">Apagado</span>                                </div>                            </div>                            <div class="center show-hide-opacity" ng-show="canTurnOff" style="position: absolute; top: 197px; left: 65px; height: 40px; width: 100px;" on-tap="toggle()">                                <i class="icon ion-power" style="color: white; font-size: 26px;"></i>                            </div>                        </div>',controller:function(t){void 0===t.on&&(t.on=!0),void 0===t.canTurnOff&&(t.canTurnOff=!0),void 0===t.isRgb&&(t.isRgb=!0),t.mode=t.mode||"static",t.modeStatic=t.modeStatic||{color:{r:0,g:0,b:0},intensity:0},t.modeAnimated=t.modeAnimated||{animation:"mode1",speed:1};var e=function(){t.arc=t.isRgb&&"static"!==t.mode?regularArcData(115,115,105,130,135+27.5*t.modeAnimated.speed,!1):regularArcData(115,115,105,130,135+2.75*t.modeStatic.intensity,!1)};e(),t.$watch("modeStatic.intensity",function(){e()}),t.$watch("modeAnimated.speed",function(){e()}),t.$watch("mode",function(){e()}),t.toggle=function(){t.on=!t.on}}}}),angular.module("angularTouchWidgets.directives.modeSelector",[]).directive("modeSelector",function(){return{restrict:"E",scope:{modes:"=",selectedMode:"="},template:'<div class="mode-selector" ng-class="selectedMode" style="height: 26px; width: 250px; float: right; margin: 10px 10px 10px 0" on-tap="changeMode()">                    <div style="height: 100%; width: 100%; transform: translate(112px); -webkit-transform: translate(112px)">                        <div on-tap="changeMode()" class="button-shadow" style="overflow: hidden; position: absolute; width: 40px;height: 40px; border-radius: 20px; transform: translate(125px); -webkit-transform: translate(125px); margin-left: -17px; margin-top: -6px;">                            <div class="mode-selector-botton background-animation" style="height: 100%; width: 100%;"></div>                        </div>                        <div class="transform-animation" style="height: 100%; width: 100%; position: absolute; top: 0; left: 0;" ng-style="{transform: \'rotate(\'+ showMode * (-360 / modes.length)+\'deg)\', \'-webkit-transform\': \'rotate(\'+ showMode * (-360 / modes.length)+\'deg)\'}">                            <div ng-repeat="mode in modes" class="show-hide-opacity" ng-style="{transform: \'rotate(\'+ $index * (360 / modes.length) +\'deg) translate(-125px)\', \'-webkit-transform\': \'rotate(\'+ $index * (360 / modes.length) +\'deg) translate(-125px)\'}" style="width: 250px; height: 26px; text-align: end; position: absolute;" ng-show="currentMode==$index">                                <span style="margin-right: 20px">                                    {{ mode.display }}                                </span>                                <i class="icon {{ mode.name }}-app-icon" style="margin-right: -15px; font-size: 30px; vertical-align: middle;"></i>                            </div>                        </div>                    </div>                </div>',controller:function(t){var e=function(e){var i=[];angular.forEach(t.modes,function(t){i.push(t.name)});var r=i.indexOf(e);return-1==r&&(r=0),r};t.showMode=t.currentMode=e(t.selectedMode),t.selectedMode=t.modes[t.currentMode].name,t.changeMode=function(){t.showMode=t.showMode+1,t.currentMode=t.showMode%t.modes.length,t.selectedMode=t.modes[t.currentMode].name}}}}),angular.module("angularTouchWidgets.directives.onOffButton",[]).directive("onOffButton",function(){return{restrict:"E",replace:!0,scope:{value:"="},template:'  <div>                            <div class="on-off-button">                                <svg height="260" width="230">                                    <defs>                                        <filter id="button-shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                            <feOffset result="offOut" in="SourceGraphic" dx="1" dy="4"></feOffset>                                            <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                            <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                            <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                                        </filter>                                    </defs>                                    <g on-tap="toggle()">                                        <path class="show-hide-opacity button-on-svg" ng-hide="value" fill="transparent" stroke-width="40" d="M 166 204 A 103 103 0 0 1 63 204" filter="url(#button-shadow-{{$id}})"></path>                                        <path class="show-hide-opacity button-off-svg" ng-show="value" fill="transparent" stroke-width="40" d="M 166 204 A 103 103 0 0 1 63 204" filter="url(#button-shadow-{{$id}})"></path>                                    </g>                                </svg>                                <div class="center" style="position: absolute; top: 197px; left: 65px; height: 40px; width: 100px;" on-tap="toggle()">                                    <i class="icon ion-power" style="color: white; font-size: 26px;"></i>                                </div>                                <div style="position: absolute; top: 41px; left: 39px;">                                    <div class="fx-rotate-clock round-button center override button-off button-shadow" ng-hide="value" on-tap="toggle()">                                        <span style="font-size: 34px; color: white;">Apagado</span>                                    </div>                                    <div class="fx-rotate-clock round-button center override button-on button-shadow" ng-show="value" on-tap="toggle()">                                        <span style="font-size: 30px;">Encendido</span>                                    </div>                                </div>                            </div>                        </div>',controller:function(t){t.toggle=function(){t.value=!t.value}}}}),angular.module("angularTouchWidgets.directives.orpViewer",[]).directive("orpViewer",function(){return{restrict:"E",scope:{orp:"="},replace:!0,template:'<div class="meter">                    <svg height="320" width="120" style="margin-left: 20px;">                        <defs>                            <clipPath id="orpClipPath" clipPathUnits="userSpaceOnUse">                                <rect width="32" height="300" ry="16" y="10" x="30" stroke="black" fill="transparent" stroke-width="6"></rect>                            </clipPath>                            <clipPath id="orpClipPath2" clipPathUnits="userSpaceOnUse">                                <rect width="20" height="60" y="130" x="0"></rect>                                <rect width="20" height="60" y="130" x="72"></rect>                            </clipPath>                            <filter id="shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                <feOffset result="offOut" in="SourceGraphic" dx="0" dy="2"></feOffset>                                <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                            </filter>                        </defs>                        <g filter="url(#shadow-{{$id}})">                            <rect width="82" height="50" y="135" x="5" fill="transparent" stroke="#0F0" stroke-width="4" clip-path="url(#orpClipPath2)"></rect>                            <g clip-path="url(#orpClipPath)">                                <rect width="32" height="43" y="10" x="30" fill="#FBFA4F"></rect>                                <rect width="32" height="43" y="53" x="30" fill="#F9F944"></rect>                                <rect width="32" height="43" y="96" x="30" fill="#D9F531"></rect>                                <rect width="32" height="43" y="139" x="30" fill="#A5E939"></rect>                                <rect width="32" height="43" y="182" x="30" fill="#68D62E"></rect>                                <rect width="32" height="43" y="225" x="30" fill="#2CBD34"></rect>                                <rect width="32" height="43" y="268" x="30" fill="#297C37"></rect>                            </g>                            <rect width="32" height="300" ry="16" y="10" x="30" stroke="black" fill="transparent" stroke-width="6"></rect>                        </g>                        <g ng-attr-transform="translate(28,{{posY}})" filter="url(#shadow-{{$id}})">                            <path transform="translate(0,-13)" fill="#f00" stroke="#000" stroke-width="2" d="M84.3022,22.3106 C84.2473,33.4926 75.1392,42.5115 63.9571,42.4565 C59.157,42.4329 54.5029,41.0224 51.298,37.9296 C45.0185,31.87 35.0221,25.6927 8.0808,24.1617 C7.10067,24.106 5.02515,23.916 5.049,22.0121 C5.07283,20.1095 7.13818,19.8874 8.11693,19.8378 C35.0725,18.4714 45.3311,12.386 51.4531,6.36783 C54.6291,3.24565 59.3557,1.94202 64.1562,1.96561 C75.338,2.02058 84.3572,11.1316 84.3022,22.3106 Z"></path>                            <text x="45" y="16" font-size="22" fill="white">                                {{ orp_text }}                            </text>                        </g>                    </svg>                </div>',controller:function(t){t.$watch("orp",function(){t.posY=(Math.log(t.orp)/Math.LN2+3)*(300/7)+21,t.orp_text=t.orp.toFixed(1)})}}}),angular.module("angularTouchWidgets.directives.phViewer",[]).directive("phViewer",function(){return{restrict:"E",scope:{ph:"="},replace:!0,template:'<div class="meter">                    <svg height="320" width="120" style="margin-left: 20px;">                        <defs>                            <clipPath id="phClipPath" clipPathUnits="userSpaceOnUse">                                <rect width="32" height="300" ry="16" y="10" x="30" stroke="black" fill="transparent" stroke-width="6"></rect>                            </clipPath>                            <clipPath id="phClipPath2" clipPathUnits="userSpaceOnUse">                                <rect width="20" height="60" y="130" x="0"></rect>                                <rect width="20" height="60" y="130" x="72"></rect>                            </clipPath>                            <filter id="shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                <feOffset result="offOut" in="SourceGraphic" dx="0" dy="2"></feOffset>                                <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                            </filter>                        </defs>                        <g filter="url(#shadow-{{$id}})">                            <rect width="82" height="50" y="135" x="5" fill="transparent" stroke="#0F0" stroke-width="4" clip-path="url(#phClipPath2)"></rect>                            <g clip-path="url(#phClipPath)">                                <rect width="32" height="20" y="10" x="30" fill="#CE231C"></rect>                                <rect width="32" height="20" y="30" x="30" fill="#E1332C"></rect>                                <rect width="32" height="20" y="50" x="30" fill="#EC672E"></rect>                                <rect width="32" height="20" y="70" x="30" fill="#F3912C"></rect>                                <rect width="32" height="20" y="90" x="30" fill="#F4AE2A"></rect>                                <rect width="32" height="20" y="110" x="30" fill="#F1E81F"></rect>                                <rect width="32" height="20" y="130" x="30" fill="#D6D52D"></rect>                                <rect width="32" height="20" y="150" x="30" fill="#84BB3B"></rect>                                <rect width="32" height="20" y="170" x="30" fill="#29A340"></rect>                                <rect width="32" height="20" y="190" x="30" fill="#119147"></rect>                                <rect width="32" height="20" y="210" x="30" fill="#1E8073"></rect>                                <rect width="32" height="20" y="230" x="30" fill="#3B5F9D"></rect>                                <rect width="32" height="20" y="250" x="30" fill="#384579"></rect>                                <rect width="32" height="20" y="270" x="30" fill="#3F2B6A"></rect>                                <rect width="32" height="20" y="290" x="30" fill="#342550"></rect>                            </g>                            <rect width="32" height="300" ry="16" y="10" x="30" stroke="black" fill="transparent" stroke-width="6"></rect>                        </g>                        <g ng-attr-transform="translate(28,{{posY}})" filter="url(#shadow-{{$id}})">                            <path transform="translate(0,-13)" fill="#f00" stroke="#000" stroke-width="2" d="M84.3022,22.3106 C84.2473,33.4926 75.1392,42.5115 63.9571,42.4565 C59.157,42.4329 54.5029,41.0224 51.298,37.9296 C45.0185,31.87 35.0221,25.6927 8.0808,24.1617 C7.10067,24.106 5.02515,23.916 5.049,22.0121 C5.07283,20.1095 7.13818,19.8874 8.11693,19.8378 C35.0725,18.4714 45.3311,12.386 51.4531,6.36783 C54.6291,3.24565 59.3557,1.94202 64.1562,1.96561 C75.338,2.02058 84.3572,11.1316 84.3022,22.3106 Z"></path>                            <text x="45" y="16" font-size="22" fill="white">                                {{ ph_text }}                            </text>                        </g>                    </svg>                </div>',controller:function(t){t.$watch("ph",function(){t.posY=20*t.ph+10,t.ph_text=t.ph.toFixed(1)
})}}}),angular.module("angularTouchWidgets.directives.thermometerEditor",[]).directive("thermometerEditor",function(){return{restrict:"E",scope:{actualTemp:"=",setTemp:"=",showActual:"@",minTemp:"@",maxTemp:"@"},replace:!0,template:'  <svg width="170" height="300" on-tap="onTap($event)" on-drag-start="onTouch($event)" on-drag-end="onRelease()" on-drag="drag($event)" style="margin-left: 52px">                            <defs>                                <clipPath id="thermometerClipPath" clipPathUnits="userSpaceOnUse">                                    <path d="M54.933,7.69623 C40.936,7.69623 29.639,19.1202 29.639,33.3322 L29.639,183.306 C29.639,183.352 29.638,183.396 29.639,183.443 C16.057,192.031 7,207.31 7,224.752 C7,251.623 28.466,273.417 54.933,273.417 C81.4,273.417 102.867,251.623 102.867,224.752 C102.867,207.296 93.783,192.028 80.183,183.443 C80.183,183.396 80.183,183.352 80.183,183.306 L80.183,33.3322 C80.183,19.1202 68.931,7.69623 54.933,7.69623 Z"></path>                                </clipPath>                                <filter id="shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                    <feOffset result="offOut" in="SourceGraphic" dx="0" dy="2"></feOffset>                                    <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                    <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                    <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                                </filter>                            </defs>                            <g filter="url(#shadow-{{$id}})">                                <g clip-path="url(#thermometerClipPath)">                                    <rect height="300" width="130" fill="white"></rect>                                    <rect class="content-selection" height="300" width="130" ng-attr-y="{{ setTempYPosition }}"></rect>                                    <rect class="secondary-content-selection" height="300" width="130" ng-attr-y="{{ actualTempYPosition }}" ng-show="actualTemp"></rect>                                    <path fill="none" stroke="white" stroke-width="18" stroke-miterlimit="4" d="M54.933,7.69623 C40.936,7.69623 29.639,19.1202 29.639,33.3322 L29.639,183.306 C29.639,183.352 29.638,183.396 29.639,183.443 C16.057,192.031 7,207.31 7,224.752 C7,251.623 28.466,273.417 54.933,273.417 C81.4,273.417 102.867,251.623 102.867,224.752 C102.867,207.296 93.783,192.028 80.183,183.443 C80.183,183.396 80.183,183.352 80.183,183.306 L80.183,33.3322 C80.183,19.1202 68.931,7.69623 54.933,7.69623 Z"></path>                                </g>                                <path fill="none" stroke="black" stroke-width="6" stroke-miterlimit="4" d="M54.933,7.69623 C40.936,7.69623 29.639,19.1202 29.639,33.3322 L29.639,183.306 C29.639,183.352 29.638,183.396 29.639,183.443 C16.057,192.031 7,207.31 7,224.752 C7,251.623 28.466,273.417 54.933,273.417 C81.4,273.417 102.867,251.623 102.867,224.752 C102.867,207.296 93.783,192.028 80.183,183.443 C80.183,183.396 80.183,183.352 80.183,183.306 L80.183,33.3322 C80.183,19.1202 68.931,7.69623 54.933,7.69623 Z"></path>                            </g>                            <text x="110" ng-attr-y="{{ setTempYPosition + 5 }}" font-size="20" ng-hide="showActual && (setTemp < actualTemp)">                                {{ setTemp }}°C                            </text>                            <text x="110" ng-attr-y="{{ actualTempYPosition + 5 }}" font-size="20" ng-show="showActual">                                {{ actualTemp }}°C                            </text>                        </svg>',controller:function(t,e){t.isActualTempShowed=t.showActual,void 0===t.isActualTempShowed&&(t.isActualTempShowed=void 0!==t.actualTemp);var i=!1,r=parseInt(t.minTemp)||-20,o=parseInt(t.maxTemp)||50,a=260,n=10,l=function(t){var e=a*(t-r)/(o-r);return a-e+n},s=function(t){var e={y:t.gesture.touches[0].clientY},i=t.currentTarget.getBoundingClientRect(),l=e.y-i.top,s=Math.round((a-l+n)/a*(o-r)+r);return s>o?s=o:r>s&&(s=r),s};t.onTap=function(e){t.onTouch(e),t.onRelease(e)},t.onTouch=function(r){i=!0,e.freezeAllScrolls(!0),t.setTemp=s(r)},t.onRelease=function(){i=!1,e.freezeAllScrolls(!1)},t.drag=function(e){i&&(t.setTemp=s(e))};var c=function(){t.isActualTempShowed&&(t.actualTempYPosition=l(t.actualTemp)),t.setTempYPosition=l(t.setTemp)};c(),t.$watch("actualTemp",function(){c()}),t.$watch("setTemp",function(){c()})}}}),angular.module("angularTouchWidgets.directives.timerEditor",[]).directive("timerEditor",function(){return{restrict:"E",scope:{time:"=",canBeZero:"="},template:'<div style="margin: auto; height: 250px; width: 350px;" on-drag-start="onDrag($event)" on-touch="onTouch($event)" on-drag-end="onRelease()" on-drag="drag($event)">                    <svg id="clock-editor" height="250" width="350">                        <defs>                            <filter id="shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                <feOffset result="offOut" in="SourceGraphic" dx="0" dy="2"></feOffset>                                <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                            </filter>                        </defs>                        <g>                            <circle cx="175" cy="125" r="100" fill="white"></circle>                            <path fill="#eee" d="M 175 25 A 100 100 0 0 1 225 38L 175 125"></path>                            <path fill="#eee" d="M 261 75 A 100 100 0 0 1 275 125L 175 125"></path>                            <path fill="#eee" d="M 261 175 A 100 100 0 0 1 225 211L 175 125"></path>                            <path fill="#eee" d="M 175 225 A 100 100 0 0 1 125 211L 175 125"></path>                            <path fill="#eee" d="M 88 175 A 100 100 0 0 1 75 125L 175 125"></path>                            <path fill="#eee" d="M 88 74 A 100 100 0 0 1 124 38L 175 125"></path>                        </g>                        <path class="content-selection" ng-attr-d="{{ semiCircle }}" filter="url(#shadow-{{$id}})"></path>                        <circle id="test" cx="175" cy="125" r="100" stroke="black" fill="transparent" stroke-width="6" filter="url(#shadow-{{$id}})"></circle>                        <g fill="#555">                            <text x="167" y="47">                                0                            </text>                            <text x="210" y="57">                                5                            </text>                            <text x="242" y="88">                                10                            </text>                            <text x="252" y="129">                                15                            </text>                            <text x="241" y="171">                                20                            </text>                            <text x="210" y="203">                                25                            </text>                            <text x="168" y="215">                                30                            </text>                            <text x="128" y="203">                                35                            </text>                            <text x="96" y="171">                                40                            </text>                            <text x="85" y="129">                                45                            </text>                            <text x="95" y="88">                                50                            </text>                            <text x="125" y="57">                                55                            </text>                        </g>                    </svg>                </div>',controller:function(t,e){void 0===t.canBeZero&&(t.canBeZero=!0);var i=!1,r=function(){var e=-90+6*t.time;t.semiCircle=regularSemiCircle(175,125,100,-90,e,!1)},o=function(e){var i={x:e.gesture.touches[0].clientX,y:e.gesture.touches[0].clientY},r=e.currentTarget.getBoundingClientRect(),o={x:175+r.left,y:125+r.top},a=getAngle(o.x,o.y,i.x,i.y);t.time=5*parseInt((a+20)/30),t.canBeZero||0!=t.time||(t.time=5)};t.onClick=function(t){o(t)},t.onDrag=function(t){i=!0,e.freezeAllScrolls(!0),o(t)},t.onTouch=function(t){o(t)},t.onRelease=function(){i=!1,e.freezeAllScrolls(!1)},t.drag=function(t){i&&o(t)},t.$watch("time",function(){r()}),r()}}}),angular.module("angularTouchWidgets.directives.timerViewer",[]).directive("timerViewer",function(){return{restrict:"E",scope:{time:"=",onTab:"&"},replace:!0,template:'<div>                    <svg class="clock-viewer" height="200" width="240" on-tap="onClick()">                        <defs>                            <filter id="shadow-{{$id}}" x="-200%" y="-200%" width="450%" height="450%">                                <feOffset result="offOut" in="SourceGraphic" dx="0" dy="2"></feOffset>                                <feColorMatrix result="matrixOut" in="offOut" type="matrix" values="0.4 0 0 0 0 0 0.4 0 0 0 0 0 0.4 0 0 0 0 0 1 0"></feColorMatrix>                                <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="2"></feGaussianBlur>                                <feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend>                            </filter>                        </defs>                        <g filter="url(#shadow-{{$id}})">                            <circle id="test" cx="115" cy="100" r="70" fill="white"></circle>                            <path class="content-selection" ng-attr-d="{{ semiCircle }}"></path>                            <circle id="test" cx="115" cy="100" r="65" stroke="white" fill="transparent" stroke-width="8"></circle>                            <circle id="test" cx="115" cy="100" r="70" stroke="black" fill="transparent" stroke-width="6"></circle>                        </g>                    </svg>                </div>',controller:function(t){var e=function(){var e=-90+6*t.time;t.semiCircle=regularSemiCircle(115,100,70,-90,e,!1)};e(),t.$watch("time",function(){e()})}}});
//# sourceMappingURL=data:application/json;base64,
